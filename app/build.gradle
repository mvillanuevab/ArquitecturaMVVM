plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'jacoco'
}
jacoco {
    toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

//task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    reports {
        xml.enabled = true
        html.enabled = true
    }
//    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', 'src/main/assets/**/*']
//    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def fileFilter = ['**/BuildConfig.class', 'src/main/assets/**/*'] //'src/main/gen/**/*',
    def debugTree = fileTree(dir: "$buildDir/intermediates/javac/debug/classses", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main"

    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree]))
//    getExecutionData().setFrom(fileTree(dir: project.projectDir, includes: ['jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec']))
    getExecutionData().setFrom(fileTree(dir: project.projectDir, includes: ['**/**/*.exec', '**/**/*.ec']))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "mx.ine.institucional.movil.arquitecturamvvm"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'




    //Navigation Components
//    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0"
//    implementation "androidx.navigation:navigation-ui-ktx:2.3.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    // KTX - Viewmodel Y Livedata
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01"

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.1.0"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    androidTestImplementation 'androidx.test:rules:1.3.1-alpha01'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //Corutinas
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.0-M1'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.0-M1'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.0'

    //PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //Room
    implementation 'androidx.room:room-ktx:2.2.5'
    implementation "androidx.room:room-runtime:2.2.5"
    kapt 'androidx.room:room-compiler:2.2.5'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.28.1-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28.1-alpha"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    //EventEmitter (one-off events)
    implementation 'com.github.Zhuinden:event-emitter:1.1.0'

    //material design
    implementation 'com.google.android.material:material:1.2.1'

    //circleImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //espresso
    implementation "androidx.test.espresso:espresso-idling-resource:3.1.0"

    // Local Unit Tests
    implementation "androidx.test:core:1.3.0"
    testImplementation "junit:junit:4.13.1"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
//    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.0-M1'
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "org.mockito:mockito-core:3.3.3"
    // AndroidX Test - JVM testing
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"
    testImplementation "androidx.test:core-ktx:1.3.0"

    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.1"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.28.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
//    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.0-M1'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "org.mockito:mockito-core:3.3.3"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28.1-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.28.1-alpha'
    debugImplementation "androidx.fragment:fragment-testing:1.3.0-beta01"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
}